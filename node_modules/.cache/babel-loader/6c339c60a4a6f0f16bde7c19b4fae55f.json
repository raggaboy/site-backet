{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n} // copied from https://github.com/algolia/instantsearch.js/blob/688e36a67bb4c63d008d8abc02257a7b7c04e513/src/lib/voiceSearchHelper/index.ts\n// #region wrong SpeechRecognition-related types\n// This is not released in typescript yet, so we're copy&pasting the type definition from\n// https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/924\n// #endregion wrong SpeechRecognition-related types\n\n\nexport default function createVoiceSearchHelper(_ref) {\n  var searchAsYouSpeak = _ref.searchAsYouSpeak,\n      language = _ref.language,\n      onQueryChange = _ref.onQueryChange,\n      onStateChange = _ref.onStateChange;\n  var SpeechRecognitionAPI = window.webkitSpeechRecognition || window.SpeechRecognition;\n\n  var getDefaultState = function getDefaultState(status) {\n    return {\n      status: status,\n      transcript: '',\n      isSpeechFinal: false,\n      errorCode: undefined\n    };\n  };\n\n  var state = getDefaultState('initial');\n  var recognition;\n\n  var isBrowserSupported = function isBrowserSupported() {\n    return Boolean(SpeechRecognitionAPI);\n  };\n\n  var isListening = function isListening() {\n    return state.status === 'askingPermission' || state.status === 'waiting' || state.status === 'recognizing';\n  };\n\n  var setState = function setState() {\n    var newState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    state = _objectSpread(_objectSpread({}, state), newState);\n    onStateChange();\n  };\n\n  var getState = function getState() {\n    return state;\n  };\n\n  var resetState = function resetState() {\n    var status = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'initial';\n    setState(getDefaultState(status));\n  };\n\n  var onStart = function onStart() {\n    setState({\n      status: 'waiting'\n    });\n  };\n\n  var onError = function onError(event) {\n    setState({\n      status: 'error',\n      errorCode: event.error\n    });\n  };\n\n  var onResult = function onResult(event) {\n    setState({\n      status: 'recognizing',\n      transcript: event.results[0] && event.results[0][0] && event.results[0][0].transcript || '',\n      isSpeechFinal: event.results[0] && event.results[0].isFinal\n    });\n\n    if (searchAsYouSpeak && state.transcript) {\n      onQueryChange(state.transcript);\n    }\n  };\n\n  var onEnd = function onEnd() {\n    if (!state.errorCode && state.transcript && !searchAsYouSpeak) {\n      onQueryChange(state.transcript);\n    }\n\n    if (state.status !== 'error') {\n      setState({\n        status: 'finished'\n      });\n    }\n  };\n\n  var start = function start() {\n    recognition = new SpeechRecognitionAPI();\n\n    if (!recognition) {\n      return;\n    }\n\n    resetState('askingPermission');\n    recognition.interimResults = true;\n\n    if (language) {\n      recognition.lang = language;\n    }\n\n    recognition.addEventListener('start', onStart); // @ts-ignore: refer to the top `wrong SpeechRecognition-related types` comments\n\n    recognition.addEventListener('error', onError);\n    recognition.addEventListener('result', onResult);\n    recognition.addEventListener('end', onEnd);\n    recognition.start();\n  };\n\n  var dispose = function dispose() {\n    if (!recognition) {\n      return;\n    }\n\n    recognition.stop();\n    recognition.removeEventListener('start', onStart); // @ts-ignore: refer to the top `wrong SpeechRecognition-related types` comments\n\n    recognition.removeEventListener('error', onError);\n    recognition.removeEventListener('result', onResult);\n    recognition.removeEventListener('end', onEnd);\n    recognition = undefined;\n  };\n\n  var stop = function stop() {\n    dispose(); // Because `dispose` removes event listeners, `end` listener is not called.\n    // So we're setting the `status` as `finished` here.\n    // If we don't do it, it will be still `waiting` or `recognizing`.\n\n    resetState('finished');\n  };\n\n  var toggleListening = function toggleListening() {\n    if (!isBrowserSupported()) {\n      return;\n    }\n\n    if (isListening()) {\n      stop();\n    } else {\n      start();\n    }\n  };\n\n  return {\n    getState: getState,\n    isBrowserSupported: isBrowserSupported,\n    isListening: isListening,\n    toggleListening: toggleListening,\n    dispose: dispose\n  };\n}","map":{"version":3,"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","createVoiceSearchHelper","_ref","searchAsYouSpeak","language","onQueryChange","onStateChange","SpeechRecognitionAPI","window","webkitSpeechRecognition","SpeechRecognition","getDefaultState","status","transcript","isSpeechFinal","errorCode","undefined","state","recognition","isBrowserSupported","Boolean","isListening","setState","newState","getState","resetState","onStart","onError","event","error","onResult","results","isFinal","onEnd","start","interimResults","lang","addEventListener","dispose","stop","removeEventListener","toggleListening"],"sources":["/home/dedm/Documents/sript/lab3-script/node_modules/react-instantsearch-dom/dist/es/lib/voiceSearchHelper/index.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n// copied from https://github.com/algolia/instantsearch.js/blob/688e36a67bb4c63d008d8abc02257a7b7c04e513/src/lib/voiceSearchHelper/index.ts\n// #region wrong SpeechRecognition-related types\n// This is not released in typescript yet, so we're copy&pasting the type definition from\n// https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/924\n// #endregion wrong SpeechRecognition-related types\nexport default function createVoiceSearchHelper(_ref) {\n  var searchAsYouSpeak = _ref.searchAsYouSpeak,\n      language = _ref.language,\n      onQueryChange = _ref.onQueryChange,\n      onStateChange = _ref.onStateChange;\n  var SpeechRecognitionAPI = window.webkitSpeechRecognition || window.SpeechRecognition;\n\n  var getDefaultState = function getDefaultState(status) {\n    return {\n      status: status,\n      transcript: '',\n      isSpeechFinal: false,\n      errorCode: undefined\n    };\n  };\n\n  var state = getDefaultState('initial');\n  var recognition;\n\n  var isBrowserSupported = function isBrowserSupported() {\n    return Boolean(SpeechRecognitionAPI);\n  };\n\n  var isListening = function isListening() {\n    return state.status === 'askingPermission' || state.status === 'waiting' || state.status === 'recognizing';\n  };\n\n  var setState = function setState() {\n    var newState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    state = _objectSpread(_objectSpread({}, state), newState);\n    onStateChange();\n  };\n\n  var getState = function getState() {\n    return state;\n  };\n\n  var resetState = function resetState() {\n    var status = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'initial';\n    setState(getDefaultState(status));\n  };\n\n  var onStart = function onStart() {\n    setState({\n      status: 'waiting'\n    });\n  };\n\n  var onError = function onError(event) {\n    setState({\n      status: 'error',\n      errorCode: event.error\n    });\n  };\n\n  var onResult = function onResult(event) {\n    setState({\n      status: 'recognizing',\n      transcript: event.results[0] && event.results[0][0] && event.results[0][0].transcript || '',\n      isSpeechFinal: event.results[0] && event.results[0].isFinal\n    });\n\n    if (searchAsYouSpeak && state.transcript) {\n      onQueryChange(state.transcript);\n    }\n  };\n\n  var onEnd = function onEnd() {\n    if (!state.errorCode && state.transcript && !searchAsYouSpeak) {\n      onQueryChange(state.transcript);\n    }\n\n    if (state.status !== 'error') {\n      setState({\n        status: 'finished'\n      });\n    }\n  };\n\n  var start = function start() {\n    recognition = new SpeechRecognitionAPI();\n\n    if (!recognition) {\n      return;\n    }\n\n    resetState('askingPermission');\n    recognition.interimResults = true;\n\n    if (language) {\n      recognition.lang = language;\n    }\n\n    recognition.addEventListener('start', onStart); // @ts-ignore: refer to the top `wrong SpeechRecognition-related types` comments\n\n    recognition.addEventListener('error', onError);\n    recognition.addEventListener('result', onResult);\n    recognition.addEventListener('end', onEnd);\n    recognition.start();\n  };\n\n  var dispose = function dispose() {\n    if (!recognition) {\n      return;\n    }\n\n    recognition.stop();\n    recognition.removeEventListener('start', onStart); // @ts-ignore: refer to the top `wrong SpeechRecognition-related types` comments\n\n    recognition.removeEventListener('error', onError);\n    recognition.removeEventListener('result', onResult);\n    recognition.removeEventListener('end', onEnd);\n    recognition = undefined;\n  };\n\n  var stop = function stop() {\n    dispose(); // Because `dispose` removes event listeners, `end` listener is not called.\n    // So we're setting the `status` as `finished` here.\n    // If we don't do it, it will be still `waiting` or `recognizing`.\n\n    resetState('finished');\n  };\n\n  var toggleListening = function toggleListening() {\n    if (!isBrowserSupported()) {\n      return;\n    }\n\n    if (isListening()) {\n      stop();\n    } else {\n      start();\n    }\n  };\n\n  return {\n    getState: getState,\n    isBrowserSupported: isBrowserSupported,\n    isListening: isListening,\n    toggleListening: toggleListening,\n    dispose: dispose\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}