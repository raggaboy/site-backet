{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport PropTypes from 'prop-types';\nimport { find } from \"../core/utils.js\";\nimport createConnector from \"../core/createConnector.js\";\nimport { cleanUpValue, getIndexId, getResults, refineValue, getCurrentRefinementValue } from \"../core/indexUtils.js\";\n\nfunction getId(props) {\n  return props.attribute;\n}\n\nvar namespace = 'toggle';\nvar falsyStrings = ['0', 'false', 'null', 'undefined'];\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var currentRefinement = getCurrentRefinementValue(props, searchState, context, \"\".concat(namespace, \".\").concat(getId(props)), false);\n\n  if (falsyStrings.indexOf(currentRefinement) !== -1) {\n    return false;\n  }\n\n  return Boolean(currentRefinement);\n}\n\nfunction _refine(props, searchState, nextRefinement, context) {\n  var id = getId(props);\n\n  var nextValue = _defineProperty({}, id, nextRefinement ? nextRefinement : false);\n\n  var resetPage = true;\n  return refineValue(searchState, nextValue, context, resetPage, namespace);\n}\n\nfunction _cleanUp(props, searchState, context) {\n  return cleanUpValue(searchState, context, \"\".concat(namespace, \".\").concat(getId(props)));\n}\n/**\n * connectToggleRefinement connector provides the logic to build a widget that will\n * provides an on/off filtering feature based on an attribute value.\n * @name connectToggleRefinement\n * @kind connector\n * @requirements To use this widget, you'll need an attribute to toggle on.\n *\n * You can't toggle on null or not-null values. If you want to address this particular use-case you'll need to compute an\n * extra boolean attribute saying if the value exists or not. See this [thread](https://discourse.algolia.com/t/how-to-create-a-toggle-for-the-absence-of-a-string-attribute/2460) for more details.\n *\n * @propType {string} attribute - Name of the attribute on which to apply the `value` refinement. Required when `value` is present.\n * @propType {string} label - Label for the toggle.\n * @propType {string} value - Value of the refinement to apply on `attribute`.\n * @propType {boolean} [defaultRefinement=false] - Default searchState of the widget. Should the toggle be checked by default?\n * @providedPropType {boolean} currentRefinement - `true` when the refinement is applied, `false` otherwise\n * @providedPropType {object} count - an object that contains the count for `checked` and `unchecked` state\n * @providedPropType {function} refine - a function to toggle a refinement\n * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state\n */\n\n\nexport default createConnector({\n  displayName: 'AlgoliaToggle',\n  $$type: 'ais.toggle',\n  propTypes: {\n    label: PropTypes.string.isRequired,\n    attribute: PropTypes.string.isRequired,\n    value: PropTypes.any.isRequired,\n    filter: PropTypes.func,\n    defaultRefinement: PropTypes.bool\n  },\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var attribute = props.attribute,\n        value = props.value;\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    var currentRefinement = getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    var allFacetValues = results && results.getFacetByName(attribute) ? results.getFacetValues(attribute) : null;\n    var facetValue = // Use null to always be consistent with type of the value\n    // count: number | null\n    allFacetValues && allFacetValues.length ? find(allFacetValues, function (item) {\n      return item.name === value.toString();\n    }) : null;\n    var facetValueCount = facetValue && facetValue.count;\n    var allFacetValuesCount = // Use null to always be consistent with type of the value\n    // count: number | null\n    allFacetValues && allFacetValues.length ? allFacetValues.reduce(function (acc, item) {\n      return acc + item.count;\n    }, 0) : null;\n    var canRefine = currentRefinement ? allFacetValuesCount !== null && allFacetValuesCount > 0 : facetValueCount !== null && facetValueCount > 0;\n    var count = {\n      checked: allFacetValuesCount,\n      unchecked: facetValueCount\n    };\n    return {\n      currentRefinement: currentRefinement,\n      canRefine: canRefine,\n      count: count\n    };\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    return _refine(props, searchState, nextRefinement, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return _cleanUp(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    var attribute = props.attribute,\n        value = props.value,\n        filter = props.filter;\n    var checked = getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    var nextSearchParameters = searchParameters.addDisjunctiveFacet(attribute);\n\n    if (checked) {\n      nextSearchParameters = nextSearchParameters.addDisjunctiveFacetRefinement(attribute, value);\n\n      if (filter) {\n        nextSearchParameters = filter(nextSearchParameters);\n      }\n    }\n\n    return nextSearchParameters;\n  },\n  getMetadata: function getMetadata(props, searchState) {\n    var id = getId(props);\n    var checked = getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    var items = [];\n    var index = getIndexId({\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n\n    if (checked) {\n      items.push({\n        label: props.label,\n        currentRefinement: checked,\n        attribute: props.attribute,\n        value: function value(nextState) {\n          return _refine(props, nextState, false, {\n            ais: props.contextValue,\n            multiIndexContext: props.indexContextValue\n          });\n        }\n      });\n    }\n\n    return {\n      id: id,\n      index: index,\n      items: items\n    };\n  }\n});","map":{"version":3,"names":["_defineProperty","PropTypes","find","createConnector","cleanUpValue","getIndexId","getResults","refineValue","getCurrentRefinementValue","getId","props","attribute","namespace","falsyStrings","getCurrentRefinement","searchState","context","currentRefinement","concat","indexOf","Boolean","_refine","nextRefinement","id","nextValue","resetPage","_cleanUp","displayName","$$type","propTypes","label","string","isRequired","value","any","filter","func","defaultRefinement","bool","getProvidedProps","searchResults","results","ais","contextValue","multiIndexContext","indexContextValue","allFacetValues","getFacetByName","getFacetValues","facetValue","length","item","name","toString","facetValueCount","count","allFacetValuesCount","reduce","acc","canRefine","checked","unchecked","refine","cleanUp","getSearchParameters","searchParameters","nextSearchParameters","addDisjunctiveFacet","addDisjunctiveFacetRefinement","getMetadata","items","index","push","nextState"],"sources":["/home/dedm/Documents/sript/lab3-script/node_modules/react-instantsearch-core/dist/es/connectors/connectToggleRefinement.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport PropTypes from 'prop-types';\nimport { find } from \"../core/utils.js\";\nimport createConnector from \"../core/createConnector.js\";\nimport { cleanUpValue, getIndexId, getResults, refineValue, getCurrentRefinementValue } from \"../core/indexUtils.js\";\n\nfunction getId(props) {\n  return props.attribute;\n}\n\nvar namespace = 'toggle';\nvar falsyStrings = ['0', 'false', 'null', 'undefined'];\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var currentRefinement = getCurrentRefinementValue(props, searchState, context, \"\".concat(namespace, \".\").concat(getId(props)), false);\n\n  if (falsyStrings.indexOf(currentRefinement) !== -1) {\n    return false;\n  }\n\n  return Boolean(currentRefinement);\n}\n\nfunction _refine(props, searchState, nextRefinement, context) {\n  var id = getId(props);\n\n  var nextValue = _defineProperty({}, id, nextRefinement ? nextRefinement : false);\n\n  var resetPage = true;\n  return refineValue(searchState, nextValue, context, resetPage, namespace);\n}\n\nfunction _cleanUp(props, searchState, context) {\n  return cleanUpValue(searchState, context, \"\".concat(namespace, \".\").concat(getId(props)));\n}\n/**\n * connectToggleRefinement connector provides the logic to build a widget that will\n * provides an on/off filtering feature based on an attribute value.\n * @name connectToggleRefinement\n * @kind connector\n * @requirements To use this widget, you'll need an attribute to toggle on.\n *\n * You can't toggle on null or not-null values. If you want to address this particular use-case you'll need to compute an\n * extra boolean attribute saying if the value exists or not. See this [thread](https://discourse.algolia.com/t/how-to-create-a-toggle-for-the-absence-of-a-string-attribute/2460) for more details.\n *\n * @propType {string} attribute - Name of the attribute on which to apply the `value` refinement. Required when `value` is present.\n * @propType {string} label - Label for the toggle.\n * @propType {string} value - Value of the refinement to apply on `attribute`.\n * @propType {boolean} [defaultRefinement=false] - Default searchState of the widget. Should the toggle be checked by default?\n * @providedPropType {boolean} currentRefinement - `true` when the refinement is applied, `false` otherwise\n * @providedPropType {object} count - an object that contains the count for `checked` and `unchecked` state\n * @providedPropType {function} refine - a function to toggle a refinement\n * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state\n */\n\n\nexport default createConnector({\n  displayName: 'AlgoliaToggle',\n  $$type: 'ais.toggle',\n  propTypes: {\n    label: PropTypes.string.isRequired,\n    attribute: PropTypes.string.isRequired,\n    value: PropTypes.any.isRequired,\n    filter: PropTypes.func,\n    defaultRefinement: PropTypes.bool\n  },\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var attribute = props.attribute,\n        value = props.value;\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    var currentRefinement = getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    var allFacetValues = results && results.getFacetByName(attribute) ? results.getFacetValues(attribute) : null;\n    var facetValue = // Use null to always be consistent with type of the value\n    // count: number | null\n    allFacetValues && allFacetValues.length ? find(allFacetValues, function (item) {\n      return item.name === value.toString();\n    }) : null;\n    var facetValueCount = facetValue && facetValue.count;\n    var allFacetValuesCount = // Use null to always be consistent with type of the value\n    // count: number | null\n    allFacetValues && allFacetValues.length ? allFacetValues.reduce(function (acc, item) {\n      return acc + item.count;\n    }, 0) : null;\n    var canRefine = currentRefinement ? allFacetValuesCount !== null && allFacetValuesCount > 0 : facetValueCount !== null && facetValueCount > 0;\n    var count = {\n      checked: allFacetValuesCount,\n      unchecked: facetValueCount\n    };\n    return {\n      currentRefinement: currentRefinement,\n      canRefine: canRefine,\n      count: count\n    };\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    return _refine(props, searchState, nextRefinement, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return _cleanUp(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    var attribute = props.attribute,\n        value = props.value,\n        filter = props.filter;\n    var checked = getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    var nextSearchParameters = searchParameters.addDisjunctiveFacet(attribute);\n\n    if (checked) {\n      nextSearchParameters = nextSearchParameters.addDisjunctiveFacetRefinement(attribute, value);\n\n      if (filter) {\n        nextSearchParameters = filter(nextSearchParameters);\n      }\n    }\n\n    return nextSearchParameters;\n  },\n  getMetadata: function getMetadata(props, searchState) {\n    var id = getId(props);\n    var checked = getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    var items = [];\n    var index = getIndexId({\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n\n    if (checked) {\n      items.push({\n        label: props.label,\n        currentRefinement: checked,\n        attribute: props.attribute,\n        value: function value(nextState) {\n          return _refine(props, nextState, false, {\n            ais: props.contextValue,\n            multiIndexContext: props.indexContextValue\n          });\n        }\n      });\n    }\n\n    return {\n      id: id,\n      index: index,\n      items: items\n    };\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}