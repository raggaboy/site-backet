{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"page\"];\nimport isEqual from 'react-fast-compare';\nimport createConnector from \"../core/createConnector.js\";\nimport { getCurrentRefinementValue, refineValue, getResults } from \"../core/indexUtils.js\";\nimport { addAbsolutePositions, addQueryID } from \"../core/utils.js\";\n\nfunction getId() {\n  return 'page';\n}\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var id = getId();\n  var page = 1;\n  var currentRefinement = getCurrentRefinementValue(props, searchState, context, id, page);\n\n  if (typeof currentRefinement === 'string') {\n    return parseInt(currentRefinement, 10);\n  }\n\n  return currentRefinement;\n}\n\nfunction getStateWithoutPage(state) {\n  var _ref = state || {},\n      page = _ref.page,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return rest;\n}\n\nfunction getInMemoryCache() {\n  var cachedHits = undefined;\n  var cachedState = undefined;\n  return {\n    read: function read(_ref2) {\n      var state = _ref2.state;\n      return isEqual(cachedState, getStateWithoutPage(state)) ? cachedHits : null;\n    },\n    write: function write(_ref3) {\n      var state = _ref3.state,\n          hits = _ref3.hits;\n      cachedState = getStateWithoutPage(state);\n      cachedHits = hits;\n    }\n  };\n}\n\nfunction extractHitsFromCachedHits(cachedHits) {\n  return Object.keys(cachedHits).map(Number).sort(function (a, b) {\n    return a - b;\n  }).reduce(function (acc, page) {\n    return acc.concat(cachedHits[page]);\n  }, []);\n}\n/**\n * InfiniteHits connector provides the logic to create connected\n * components that will render an continuous list of results retrieved from\n * Algolia. This connector provides a function to load more results.\n * @name connectInfiniteHits\n * @kind connector\n * @providedPropType {array.<object>} hits - the records that matched the search state\n * @providedPropType {boolean} hasMore - indicates if there are more pages to load\n * @providedPropType {function} refine - call to load more results\n */\n\n\nexport default createConnector({\n  displayName: 'AlgoliaInfiniteHits',\n  $$type: 'ais.infiniteHits',\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var _this = this;\n\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n\n    if (!results) {\n      return {\n        hits: [],\n        hasPrevious: false,\n        hasMore: false,\n        refine: function refine() {},\n        refinePrevious: function refinePrevious() {},\n        refineNext: function refineNext() {}\n      };\n    }\n\n    var page = results.page,\n        hits = results.hits,\n        hitsPerPage = results.hitsPerPage,\n        nbPages = results.nbPages,\n        state = results._state;\n    this._cache = props.cache ? props.cache : this._cache || getInMemoryCache();\n    var cachedHits = this._cache.read({\n      state: state\n    }) || {};\n    var hitsWithPositions = addAbsolutePositions(hits, hitsPerPage, page);\n    var hitsWithPositionsAndQueryID = addQueryID(hitsWithPositions, results.queryID);\n    cachedHits[page] = hitsWithPositionsAndQueryID;\n\n    this._cache.write({\n      state: state,\n      hits: cachedHits\n    });\n    /*\n      Math.min() and Math.max() returns Infinity or -Infinity when no argument is given.\n      But there is always something in this point because of `cachedHits[page]`.\n    */\n\n\n    var firstReceivedPage = Math.min.apply(Math, _toConsumableArray(Object.keys(cachedHits).map(Number)));\n    var lastReceivedPage = Math.max.apply(Math, _toConsumableArray(Object.keys(cachedHits).map(Number)));\n    var hasPrevious = firstReceivedPage > 0;\n    var lastPageIndex = nbPages - 1;\n    var hasMore = lastReceivedPage < lastPageIndex;\n\n    var refinePrevious = function refinePrevious(event) {\n      return _this.refine(event, firstReceivedPage - 1);\n    };\n\n    var refineNext = function refineNext(event) {\n      return _this.refine(event, lastReceivedPage + 1);\n    };\n\n    return {\n      hits: extractHitsFromCachedHits(cachedHits),\n      hasPrevious: hasPrevious,\n      hasMore: hasMore,\n      refinePrevious: refinePrevious,\n      refineNext: refineNext\n    };\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    return searchParameters.setQueryParameters({\n      page: getCurrentRefinement(props, searchState, {\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }) - 1\n    });\n  },\n  refine: function refine(props, searchState, event, index) {\n    var id = getId();\n\n    var nextValue = _defineProperty({}, id, index + 1);\n\n    var resetPage = false;\n    return refineValue(searchState, nextValue, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }, resetPage);\n  }\n});","map":{"version":3,"names":["_defineProperty","_toConsumableArray","_objectWithoutProperties","_excluded","isEqual","createConnector","getCurrentRefinementValue","refineValue","getResults","addAbsolutePositions","addQueryID","getId","getCurrentRefinement","props","searchState","context","id","page","currentRefinement","parseInt","getStateWithoutPage","state","_ref","rest","getInMemoryCache","cachedHits","undefined","cachedState","read","_ref2","write","_ref3","hits","extractHitsFromCachedHits","Object","keys","map","Number","sort","a","b","reduce","acc","concat","displayName","$$type","getProvidedProps","searchResults","_this","results","ais","contextValue","multiIndexContext","indexContextValue","hasPrevious","hasMore","refine","refinePrevious","refineNext","hitsPerPage","nbPages","_state","_cache","cache","hitsWithPositions","hitsWithPositionsAndQueryID","queryID","firstReceivedPage","Math","min","apply","lastReceivedPage","max","lastPageIndex","event","getSearchParameters","searchParameters","setQueryParameters","index","nextValue","resetPage"],"sources":["/home/dedm/Documents/sript/lab3-script/node_modules/react-instantsearch-core/dist/es/connectors/connectInfiniteHits.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"page\"];\nimport isEqual from 'react-fast-compare';\nimport createConnector from \"../core/createConnector.js\";\nimport { getCurrentRefinementValue, refineValue, getResults } from \"../core/indexUtils.js\";\nimport { addAbsolutePositions, addQueryID } from \"../core/utils.js\";\n\nfunction getId() {\n  return 'page';\n}\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var id = getId();\n  var page = 1;\n  var currentRefinement = getCurrentRefinementValue(props, searchState, context, id, page);\n\n  if (typeof currentRefinement === 'string') {\n    return parseInt(currentRefinement, 10);\n  }\n\n  return currentRefinement;\n}\n\nfunction getStateWithoutPage(state) {\n  var _ref = state || {},\n      page = _ref.page,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return rest;\n}\n\nfunction getInMemoryCache() {\n  var cachedHits = undefined;\n  var cachedState = undefined;\n  return {\n    read: function read(_ref2) {\n      var state = _ref2.state;\n      return isEqual(cachedState, getStateWithoutPage(state)) ? cachedHits : null;\n    },\n    write: function write(_ref3) {\n      var state = _ref3.state,\n          hits = _ref3.hits;\n      cachedState = getStateWithoutPage(state);\n      cachedHits = hits;\n    }\n  };\n}\n\nfunction extractHitsFromCachedHits(cachedHits) {\n  return Object.keys(cachedHits).map(Number).sort(function (a, b) {\n    return a - b;\n  }).reduce(function (acc, page) {\n    return acc.concat(cachedHits[page]);\n  }, []);\n}\n/**\n * InfiniteHits connector provides the logic to create connected\n * components that will render an continuous list of results retrieved from\n * Algolia. This connector provides a function to load more results.\n * @name connectInfiniteHits\n * @kind connector\n * @providedPropType {array.<object>} hits - the records that matched the search state\n * @providedPropType {boolean} hasMore - indicates if there are more pages to load\n * @providedPropType {function} refine - call to load more results\n */\n\n\nexport default createConnector({\n  displayName: 'AlgoliaInfiniteHits',\n  $$type: 'ais.infiniteHits',\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var _this = this;\n\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n\n    if (!results) {\n      return {\n        hits: [],\n        hasPrevious: false,\n        hasMore: false,\n        refine: function refine() {},\n        refinePrevious: function refinePrevious() {},\n        refineNext: function refineNext() {}\n      };\n    }\n\n    var page = results.page,\n        hits = results.hits,\n        hitsPerPage = results.hitsPerPage,\n        nbPages = results.nbPages,\n        state = results._state;\n    this._cache = props.cache ? props.cache : this._cache || getInMemoryCache();\n    var cachedHits = this._cache.read({\n      state: state\n    }) || {};\n    var hitsWithPositions = addAbsolutePositions(hits, hitsPerPage, page);\n    var hitsWithPositionsAndQueryID = addQueryID(hitsWithPositions, results.queryID);\n    cachedHits[page] = hitsWithPositionsAndQueryID;\n\n    this._cache.write({\n      state: state,\n      hits: cachedHits\n    });\n    /*\n      Math.min() and Math.max() returns Infinity or -Infinity when no argument is given.\n      But there is always something in this point because of `cachedHits[page]`.\n    */\n\n\n    var firstReceivedPage = Math.min.apply(Math, _toConsumableArray(Object.keys(cachedHits).map(Number)));\n    var lastReceivedPage = Math.max.apply(Math, _toConsumableArray(Object.keys(cachedHits).map(Number)));\n    var hasPrevious = firstReceivedPage > 0;\n    var lastPageIndex = nbPages - 1;\n    var hasMore = lastReceivedPage < lastPageIndex;\n\n    var refinePrevious = function refinePrevious(event) {\n      return _this.refine(event, firstReceivedPage - 1);\n    };\n\n    var refineNext = function refineNext(event) {\n      return _this.refine(event, lastReceivedPage + 1);\n    };\n\n    return {\n      hits: extractHitsFromCachedHits(cachedHits),\n      hasPrevious: hasPrevious,\n      hasMore: hasMore,\n      refinePrevious: refinePrevious,\n      refineNext: refineNext\n    };\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    return searchParameters.setQueryParameters({\n      page: getCurrentRefinement(props, searchState, {\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }) - 1\n    });\n  },\n  refine: function refine(props, searchState, event, index) {\n    var id = getId();\n\n    var nextValue = _defineProperty({}, id, index + 1);\n\n    var resetPage = false;\n    return refineValue(searchState, nextValue, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }, resetPage);\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}