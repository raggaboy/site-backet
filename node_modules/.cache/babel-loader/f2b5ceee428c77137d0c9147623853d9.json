{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport createConnector from \"../core/createConnector.js\";\nimport { refineValue, getCurrentRefinementValue, getResults } from \"../core/indexUtils.js\";\n\nfunction getId() {\n  return 'relevancyStrictness';\n}\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var id = getId();\n  var currentRefinement = getCurrentRefinementValue(props, searchState, context, id);\n  return currentRefinement;\n}\n\nexport default createConnector({\n  displayName: 'AlgoliaRelevantSort',\n  $$type: 'ais.relevantSort',\n  getProvidedProps: function getProvidedProps(props, _searchState, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n\n    if (!results) {\n      return {\n        isVirtualReplica: false,\n        isRelevantSorted: false\n      };\n    }\n\n    return {\n      isVirtualReplica: results.appliedRelevancyStrictness !== undefined,\n      isRelevantSorted: results.appliedRelevancyStrictness !== undefined && results.appliedRelevancyStrictness > 0\n    };\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    return searchParameters.setQueryParameter('relevancyStrictness', getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }));\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    var nextValue = _defineProperty({}, getId(), nextRefinement);\n\n    var resetPage = true;\n    return refineValue(searchState, nextValue, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }, resetPage);\n  }\n});","map":{"version":3,"names":["_defineProperty","createConnector","refineValue","getCurrentRefinementValue","getResults","getId","getCurrentRefinement","props","searchState","context","id","currentRefinement","displayName","$$type","getProvidedProps","_searchState","searchResults","results","ais","contextValue","multiIndexContext","indexContextValue","isVirtualReplica","isRelevantSorted","appliedRelevancyStrictness","undefined","getSearchParameters","searchParameters","setQueryParameter","refine","nextRefinement","nextValue","resetPage"],"sources":["/home/dedm/Documents/sript/lab3-script/node_modules/react-instantsearch-core/dist/es/connectors/connectRelevantSort.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport createConnector from \"../core/createConnector.js\";\nimport { refineValue, getCurrentRefinementValue, getResults } from \"../core/indexUtils.js\";\n\nfunction getId() {\n  return 'relevancyStrictness';\n}\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var id = getId();\n  var currentRefinement = getCurrentRefinementValue(props, searchState, context, id);\n  return currentRefinement;\n}\n\nexport default createConnector({\n  displayName: 'AlgoliaRelevantSort',\n  $$type: 'ais.relevantSort',\n  getProvidedProps: function getProvidedProps(props, _searchState, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n\n    if (!results) {\n      return {\n        isVirtualReplica: false,\n        isRelevantSorted: false\n      };\n    }\n\n    return {\n      isVirtualReplica: results.appliedRelevancyStrictness !== undefined,\n      isRelevantSorted: results.appliedRelevancyStrictness !== undefined && results.appliedRelevancyStrictness > 0\n    };\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    return searchParameters.setQueryParameter('relevancyStrictness', getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }));\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    var nextValue = _defineProperty({}, getId(), nextRefinement);\n\n    var resetPage = true;\n    return refineValue(searchState, nextValue, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }, resetPage);\n  }\n});"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,SAASC,WAAT,EAAsBC,yBAAtB,EAAiDC,UAAjD,QAAmE,uBAAnE;;AAEA,SAASC,KAAT,GAAiB;EACf,OAAO,qBAAP;AACD;;AAED,SAASC,oBAAT,CAA8BC,KAA9B,EAAqCC,WAArC,EAAkDC,OAAlD,EAA2D;EACzD,IAAIC,EAAE,GAAGL,KAAK,EAAd;EACA,IAAIM,iBAAiB,GAAGR,yBAAyB,CAACI,KAAD,EAAQC,WAAR,EAAqBC,OAArB,EAA8BC,EAA9B,CAAjD;EACA,OAAOC,iBAAP;AACD;;AAED,eAAeV,eAAe,CAAC;EAC7BW,WAAW,EAAE,qBADgB;EAE7BC,MAAM,EAAE,kBAFqB;EAG7BC,gBAAgB,EAAE,SAASA,gBAAT,CAA0BP,KAA1B,EAAiCQ,YAAjC,EAA+CC,aAA/C,EAA8D;IAC9E,IAAIC,OAAO,GAAGb,UAAU,CAACY,aAAD,EAAgB;MACtCE,GAAG,EAAEX,KAAK,CAACY,YAD2B;MAEtCC,iBAAiB,EAAEb,KAAK,CAACc;IAFa,CAAhB,CAAxB;;IAKA,IAAI,CAACJ,OAAL,EAAc;MACZ,OAAO;QACLK,gBAAgB,EAAE,KADb;QAELC,gBAAgB,EAAE;MAFb,CAAP;IAID;;IAED,OAAO;MACLD,gBAAgB,EAAEL,OAAO,CAACO,0BAAR,KAAuCC,SADpD;MAELF,gBAAgB,EAAEN,OAAO,CAACO,0BAAR,KAAuCC,SAAvC,IAAoDR,OAAO,CAACO,0BAAR,GAAqC;IAFtG,CAAP;EAID,CApB4B;EAqB7BE,mBAAmB,EAAE,SAASA,mBAAT,CAA6BC,gBAA7B,EAA+CpB,KAA/C,EAAsDC,WAAtD,EAAmE;IACtF,OAAOmB,gBAAgB,CAACC,iBAAjB,CAAmC,qBAAnC,EAA0DtB,oBAAoB,CAACC,KAAD,EAAQC,WAAR,EAAqB;MACxGU,GAAG,EAAEX,KAAK,CAACY,YAD6F;MAExGC,iBAAiB,EAAEb,KAAK,CAACc;IAF+E,CAArB,CAA9E,CAAP;EAID,CA1B4B;EA2B7BQ,MAAM,EAAE,SAASA,MAAT,CAAgBtB,KAAhB,EAAuBC,WAAvB,EAAoCsB,cAApC,EAAoD;IAC1D,IAAIC,SAAS,GAAG/B,eAAe,CAAC,EAAD,EAAKK,KAAK,EAAV,EAAcyB,cAAd,CAA/B;;IAEA,IAAIE,SAAS,GAAG,IAAhB;IACA,OAAO9B,WAAW,CAACM,WAAD,EAAcuB,SAAd,EAAyB;MACzCb,GAAG,EAAEX,KAAK,CAACY,YAD8B;MAEzCC,iBAAiB,EAAEb,KAAK,CAACc;IAFgB,CAAzB,EAGfW,SAHe,CAAlB;EAID;AAnC4B,CAAD,CAA9B"},"metadata":{},"sourceType":"module"}