{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport PropTypes from 'prop-types';\nimport createConnector from \"../core/createConnector.js\";\nimport { refineValue, getResults } from \"../core/indexUtils.js\";\nexport var getId = function getId(props) {\n  return props.attributes[0];\n};\nvar namespace = 'hierarchicalMenu';\n\nfunction _refine(props, searchState, nextRefinement, context) {\n  var id = getId(props);\n\n  var nextValue = _defineProperty({}, id, nextRefinement || '');\n\n  var resetPage = true;\n  return refineValue(searchState, nextValue, context, resetPage, namespace);\n}\n\nfunction transformValue(values) {\n  return values.reduce(function (acc, item) {\n    if (item.isRefined) {\n      acc.push({\n        label: item.name,\n        // If dealing with a nested \"items\", \"value\" is equal to the previous value concatenated with the current value\n        // If dealing with the first level, \"value\" is equal to the current value\n        value: item.escapedValue\n      }); // Create a variable in order to keep the same acc for the recursion, otherwise \"reduce\" returns a new one\n\n      if (item.data) {\n        acc = acc.concat(transformValue(item.data, acc));\n      }\n    }\n\n    return acc;\n  }, []);\n}\n/**\n * The breadcrumb component is s a type of secondary navigation scheme that\n * reveals the user’s location in a website or web application.\n *\n * @name connectBreadcrumb\n * @requirements To use this widget, your attributes must be formatted in a specific way.\n * If you want for example to have a Breadcrumb of categories, objects in your index\n * should be formatted this way:\n *\n * ```json\n * {\n *   \"categories.lvl0\": \"products\",\n *   \"categories.lvl1\": \"products > fruits\",\n *   \"categories.lvl2\": \"products > fruits > citrus\"\n * }\n * ```\n *\n * It's also possible to provide more than one path for each level:\n *\n * ```json\n * {\n *   \"categories.lvl0\": [\"products\", \"goods\"],\n *   \"categories.lvl1\": [\"products > fruits\", \"goods > to eat\"]\n * }\n * ```\n *\n * All attributes passed to the `attributes` prop must be present in \"attributes for faceting\"\n * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.\n *\n * @kind connector\n * @propType {array.<string>} attributes - List of attributes to use to generate the hierarchy of the menu. See the example for the convention to follow.\n * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.\n * @providedPropType {function} refine - a function to toggle a refinement\n * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state\n * @providedPropType {array.<{items: object, count: number, isRefined: boolean, label: string, value: string}>} items - the list of items the Breadcrumb can display.\n */\n\n\nexport default createConnector({\n  displayName: 'AlgoliaBreadcrumb',\n  $$type: 'ais.breadcrumb',\n  propTypes: {\n    attributes: function attributes(props, propName, componentName) {\n      var isNotString = function isNotString(val) {\n        return typeof val !== 'string';\n      };\n\n      if (!Array.isArray(props[propName]) || props[propName].some(isNotString) || props[propName].length < 1) {\n        return new Error(\"Invalid prop \".concat(propName, \" supplied to \").concat(componentName, \". Expected an Array of Strings\"));\n      }\n\n      return undefined;\n    },\n    transformItems: PropTypes.func\n  },\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var id = getId(props);\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    var isFacetPresent = Boolean(results) && Boolean(results.getFacetByName(id));\n\n    if (!isFacetPresent) {\n      return {\n        items: [],\n        canRefine: false\n      };\n    }\n\n    var values = results.getFacetValues(id);\n    var items = values.data ? transformValue(values.data) : [];\n    var transformedItems = props.transformItems ? props.transformItems(items) : items;\n    return {\n      canRefine: transformedItems.length > 0,\n      items: transformedItems\n    };\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    return _refine(props, searchState, nextRefinement, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  }\n});","map":{"version":3,"names":["_defineProperty","PropTypes","createConnector","refineValue","getResults","getId","props","attributes","namespace","_refine","searchState","nextRefinement","context","id","nextValue","resetPage","transformValue","values","reduce","acc","item","isRefined","push","label","name","value","escapedValue","data","concat","displayName","$$type","propTypes","propName","componentName","isNotString","val","Array","isArray","some","length","Error","undefined","transformItems","func","getProvidedProps","searchResults","results","ais","contextValue","multiIndexContext","indexContextValue","isFacetPresent","Boolean","getFacetByName","items","canRefine","getFacetValues","transformedItems","refine"],"sources":["/home/dedm/Documents/sript/lab3-script/node_modules/react-instantsearch-core/dist/es/connectors/connectBreadcrumb.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport PropTypes from 'prop-types';\nimport createConnector from \"../core/createConnector.js\";\nimport { refineValue, getResults } from \"../core/indexUtils.js\";\nexport var getId = function getId(props) {\n  return props.attributes[0];\n};\nvar namespace = 'hierarchicalMenu';\n\nfunction _refine(props, searchState, nextRefinement, context) {\n  var id = getId(props);\n\n  var nextValue = _defineProperty({}, id, nextRefinement || '');\n\n  var resetPage = true;\n  return refineValue(searchState, nextValue, context, resetPage, namespace);\n}\n\nfunction transformValue(values) {\n  return values.reduce(function (acc, item) {\n    if (item.isRefined) {\n      acc.push({\n        label: item.name,\n        // If dealing with a nested \"items\", \"value\" is equal to the previous value concatenated with the current value\n        // If dealing with the first level, \"value\" is equal to the current value\n        value: item.escapedValue\n      }); // Create a variable in order to keep the same acc for the recursion, otherwise \"reduce\" returns a new one\n\n      if (item.data) {\n        acc = acc.concat(transformValue(item.data, acc));\n      }\n    }\n\n    return acc;\n  }, []);\n}\n/**\n * The breadcrumb component is s a type of secondary navigation scheme that\n * reveals the user’s location in a website or web application.\n *\n * @name connectBreadcrumb\n * @requirements To use this widget, your attributes must be formatted in a specific way.\n * If you want for example to have a Breadcrumb of categories, objects in your index\n * should be formatted this way:\n *\n * ```json\n * {\n *   \"categories.lvl0\": \"products\",\n *   \"categories.lvl1\": \"products > fruits\",\n *   \"categories.lvl2\": \"products > fruits > citrus\"\n * }\n * ```\n *\n * It's also possible to provide more than one path for each level:\n *\n * ```json\n * {\n *   \"categories.lvl0\": [\"products\", \"goods\"],\n *   \"categories.lvl1\": [\"products > fruits\", \"goods > to eat\"]\n * }\n * ```\n *\n * All attributes passed to the `attributes` prop must be present in \"attributes for faceting\"\n * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.\n *\n * @kind connector\n * @propType {array.<string>} attributes - List of attributes to use to generate the hierarchy of the menu. See the example for the convention to follow.\n * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.\n * @providedPropType {function} refine - a function to toggle a refinement\n * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state\n * @providedPropType {array.<{items: object, count: number, isRefined: boolean, label: string, value: string}>} items - the list of items the Breadcrumb can display.\n */\n\n\nexport default createConnector({\n  displayName: 'AlgoliaBreadcrumb',\n  $$type: 'ais.breadcrumb',\n  propTypes: {\n    attributes: function attributes(props, propName, componentName) {\n      var isNotString = function isNotString(val) {\n        return typeof val !== 'string';\n      };\n\n      if (!Array.isArray(props[propName]) || props[propName].some(isNotString) || props[propName].length < 1) {\n        return new Error(\"Invalid prop \".concat(propName, \" supplied to \").concat(componentName, \". Expected an Array of Strings\"));\n      }\n\n      return undefined;\n    },\n    transformItems: PropTypes.func\n  },\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var id = getId(props);\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    var isFacetPresent = Boolean(results) && Boolean(results.getFacetByName(id));\n\n    if (!isFacetPresent) {\n      return {\n        items: [],\n        canRefine: false\n      };\n    }\n\n    var values = results.getFacetValues(id);\n    var items = values.data ? transformValue(values.data) : [];\n    var transformedItems = props.transformItems ? props.transformItems(items) : items;\n    return {\n      canRefine: transformedItems.length > 0,\n      items: transformedItems\n    };\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    return _refine(props, searchState, nextRefinement, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}