{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport createConnector from \"../core/createConnector.js\";\nimport { cleanUpValue, refineValue, getCurrentRefinementValue, getResults } from \"../core/indexUtils.js\";\n\nfunction getId() {\n  return 'page';\n}\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var id = getId();\n  var page = 1;\n  var currentRefinement = getCurrentRefinementValue(props, searchState, context, id, page);\n\n  if (typeof currentRefinement === 'string') {\n    return parseInt(currentRefinement, 10);\n  }\n\n  return currentRefinement;\n}\n\nfunction _refine(props, searchState, nextPage, context) {\n  var id = getId();\n\n  var nextValue = _defineProperty({}, id, nextPage);\n\n  var resetPage = false;\n  return refineValue(searchState, nextValue, context, resetPage);\n}\n/**\n * connectPagination connector provides the logic to build a widget that will\n * let the user displays hits corresponding to a certain page.\n * @name connectPagination\n * @kind connector\n * @propType {boolean} [showFirst=true] - Display the first page link.\n * @propType {boolean} [showLast=false] - Display the last page link.\n * @propType {boolean} [showPrevious=true] - Display the previous page link.\n * @propType {boolean} [showNext=true] - Display the next page link.\n * @propType {number} [padding=3] - How many page links to display around the current page.\n * @propType {number} [totalPages=Infinity] - Maximum number of pages to display.\n * @providedPropType {function} refine - a function to remove a single filter\n * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state\n * @providedPropType {number} nbPages - the total of existing pages\n * @providedPropType {number} currentRefinement - the page refinement currently applied\n */\n\n\nexport default createConnector({\n  displayName: 'AlgoliaPagination',\n  $$type: 'ais.pagination',\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n\n    if (!results) {\n      return null;\n    }\n\n    var nbPages = results.nbPages;\n    return {\n      nbPages: nbPages,\n      currentRefinement: getCurrentRefinement(props, searchState, {\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      canRefine: nbPages > 1\n    };\n  },\n  refine: function refine(props, searchState, nextPage) {\n    return _refine(props, searchState, nextPage, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return cleanUpValue(searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }, getId());\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    return searchParameters.setPage(getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }) - 1);\n  },\n  getMetadata: function getMetadata() {\n    return {\n      id: getId()\n    };\n  }\n});","map":{"version":3,"names":["_defineProperty","createConnector","cleanUpValue","refineValue","getCurrentRefinementValue","getResults","getId","getCurrentRefinement","props","searchState","context","id","page","currentRefinement","parseInt","_refine","nextPage","nextValue","resetPage","displayName","$$type","getProvidedProps","searchResults","results","ais","contextValue","multiIndexContext","indexContextValue","nbPages","canRefine","refine","cleanUp","getSearchParameters","searchParameters","setPage","getMetadata"],"sources":["/home/dedm/Documents/sript/lab3-script/node_modules/react-instantsearch-core/dist/es/connectors/connectPagination.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport createConnector from \"../core/createConnector.js\";\nimport { cleanUpValue, refineValue, getCurrentRefinementValue, getResults } from \"../core/indexUtils.js\";\n\nfunction getId() {\n  return 'page';\n}\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var id = getId();\n  var page = 1;\n  var currentRefinement = getCurrentRefinementValue(props, searchState, context, id, page);\n\n  if (typeof currentRefinement === 'string') {\n    return parseInt(currentRefinement, 10);\n  }\n\n  return currentRefinement;\n}\n\nfunction _refine(props, searchState, nextPage, context) {\n  var id = getId();\n\n  var nextValue = _defineProperty({}, id, nextPage);\n\n  var resetPage = false;\n  return refineValue(searchState, nextValue, context, resetPage);\n}\n/**\n * connectPagination connector provides the logic to build a widget that will\n * let the user displays hits corresponding to a certain page.\n * @name connectPagination\n * @kind connector\n * @propType {boolean} [showFirst=true] - Display the first page link.\n * @propType {boolean} [showLast=false] - Display the last page link.\n * @propType {boolean} [showPrevious=true] - Display the previous page link.\n * @propType {boolean} [showNext=true] - Display the next page link.\n * @propType {number} [padding=3] - How many page links to display around the current page.\n * @propType {number} [totalPages=Infinity] - Maximum number of pages to display.\n * @providedPropType {function} refine - a function to remove a single filter\n * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state\n * @providedPropType {number} nbPages - the total of existing pages\n * @providedPropType {number} currentRefinement - the page refinement currently applied\n */\n\n\nexport default createConnector({\n  displayName: 'AlgoliaPagination',\n  $$type: 'ais.pagination',\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n\n    if (!results) {\n      return null;\n    }\n\n    var nbPages = results.nbPages;\n    return {\n      nbPages: nbPages,\n      currentRefinement: getCurrentRefinement(props, searchState, {\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      canRefine: nbPages > 1\n    };\n  },\n  refine: function refine(props, searchState, nextPage) {\n    return _refine(props, searchState, nextPage, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return cleanUpValue(searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }, getId());\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    return searchParameters.setPage(getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }) - 1);\n  },\n  getMetadata: function getMetadata() {\n    return {\n      id: getId()\n    };\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}